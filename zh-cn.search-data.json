{"/about/":{"data":{"":"Student, learning CS with ❤."},"title":"About Me"},"/blogs/":{"data":{"":"","#":"写点什么…… "},"title":"Blog List"},"/blogs/ctf-misc-tools/":{"data":{"":"","misc2#MISC^2":"前言 MISC题型多变而且工具繁杂，因此自己花时间整理了一份工具列表，以便日后参考用 流畅地阅读这篇博客，你可能需要：\nPython2.7.18 + Python3.8 + 任何一个更高版本的Python，使用conda管理 Linux虚拟机，kali即可 流畅访问Google/GitHub等站点的网络 通用工具 PuzzleSolver 专为misc手打造的瑞士军刀(?)，整合了多种脚本（base，字频分析，png/bmp自动修复文件头，图片盲水印等等）的带GUI的工具 仓库：Github - PuzzleSolver\n[随波逐流]CTF编码工具 集成了绝大部分编码的解码/转换工具，有一键解码功能，简单题直接一把梭 官网\n010 Editor 功能强大的十六进制编辑工具，有文件模板功能，便于修改各种缺失文件头文件尾。\nbinwalk 一个分析文件并提取嵌入的文件和代码的工具，可以判断源文件中包含的隐藏文件种类 仓库：Github - binwalk 快速入门：\nbinwalk -e stego.zip #提取stego.zip steghide/stegseek steghide隐写和配套解密工具，配合rockyou.txt食用更佳 快速入门：\nstegseek [stegofile.jpg] [wordlist.txt] #用wordlist暴力破解stegofile stegseek --seed [stegofile.jpg] # 分析此文件是否包含steghide内容，包含多少隐藏内容，是如何加密的 CyberChef 赛博厨子，ctf编码神器，方便易用，可以下载本地离线使用 链接：官网\nCiphey 一个功能强大的ai全自动解密工具，输入密文后自动返回解密文本并指出加密方式（虽然不能百分百解出，但有时候试试会有奇效） 仓库：Github - Ciphet 快速入门：\nciphey -t \"put_encrypted_message_here\" ciphey -f encrypted_message.txt # 加上-q 直接给出结果 # 加上-g 只输出答案 图片隐写 Stegsolve 常用于LSB隐写分析/内容提取、GIF查看单帧\nSilentEye 分析bmp/wav中的隐写\nOurSecret 带密码的jpg隐写工具\nAcropalypse-Multi-Tool 一个基于CVE-2023-28303和CVE-2023-21036漏洞的工具，可用于恢复截图被裁剪掉的部分数据 仓库：Github - Acropalypse Multi Tool\nQR Research 二维码识别/补全软件，支持各种纠错等级和二维码种类\nQrScan 另一个二维码识别软件，特点是能批量识别并输出到csv文件中 仓库：Github - QrScan\nImageMagick/gaps 多功能图像处理工具，多用于拼图，先用ImageMagick把打乱的图像拼接，再使用gaps识别并自动整理 链接（ImageMagick）：Github - ImageMagick \u0026 官网 链接（gaps）：Github - gaps 快速入门：\nmagick.exe montage *.jpg -tile 22x2 -geometry 64x256+0+0 abc.jpg # 将目录里的jpg文件按顺序拼成x轴22块，y轴2块的图 ，每个图块的大小为64X512像素，输出文件为abc.jpg gaps run --image=img.png --size=xxx --save # size填拼图各块的长宽 # 额外参数： –generations # 遗传算法迭代次数，效果不好时适当改变 –population # 个体数量 文件隐写 wbs4.3open 带密码的pdf隐写工具\nAOPR Forensic Edition 文档密码破解工具，支持暴力、字典、掩码等，可利用VBA后门 一个可用的学习版链接：pcbeta\n音频隐写 Audacity 开源的音频编辑软件，可以可视化查看频谱、音轨，便于找出音频中的分析点\nDeepSound 2.0 带密码的wav隐写分析工具\nRX-SSTV 一个sstv识别工具，可将声音信息转为图像\nQSSTV linux上的sstv接收软件，特点是可以直接读取wav音频文件里的信息，免去了外放的困扰 仓库：Github - QSSTV\nmp3stego 正如其名，是一个命令行mp3隐写分析工具 链接：mp3stego\n压缩包分析 ZipCenOp zip伪加密修复 快速入门：\njava -jar ZipCenOp.jar r fake_encrypted.zip ARCHPR 暴力破解工具，支持掩码、字典、明文攻击等手段\nbkcrack zip明文攻击工具，和ARCHPR相比支持更多的参数 条件：1.ZipCrypto加密方式 2.已知其中某个完整的明文文件/已知明文的至少12个字节和偏移（其中又至少8字节要连续）\nhashcat 宇宙最强密码/哈希破解工具，支持多种系统，cpu/gpu/apu计算，支持多种hash算法，可破解rar、office文档、pdf等文件。\n流量分析 WireShark 抓包流量分析软件 快速入门：\nmac地址/ip/端口过滤 eth.addr==20:dc:e6:f3:78:cc //筛选MAC地址是20:dc:e6:f3:78:cc的数据包，包括源或者目的MAC地址\reth.src==20:dc:e6:f3:78:cc //源MAC地址是20:dc:e6:f3:78:cc\reth.dst==20:dc:e6:f3:78:cc //目的MAC地址是20:dc:e6:f3:78:cc\rip.addr==192.168.1.122 //筛选出IP地址是192.168.1.122的数据包，包括源IP地址或者目的IP地址\rip.src== 和ip.dst==同上\rtcp.port==80 //根据TCP端口筛选数据包，包括源端口或者目的端口\rtcp.dstport==80 //根据目的TCP端口筛选\rtcp.srcport==80 //根据源TCP端口筛选\rudp.port==4010 //根据UDP端口筛选数据包，包括源端口或者目的端口\rudp.srcport==4010 //根据源UDP端口筛选\rudp.dstport==4010 //根据目的UDP端口筛选 协议筛选 常见协议：udp，tcp，arp，icmp，smtp，pop，dns，ip，ssl，http，ftp，ssh\nhttp //过滤http流量\rhttp.request.method==GET/POST\rhttp.response\rhttp.response.code \u003e=400（包含错误码）\rhttp.response.phrase == “OK”（过滤响应中的phrase）\rhttp contains \"snapshot\" //过滤http头中含有指定字符\rhttp.server contains “snapshot” //过滤http头中server字段含有指定字符\rhttp.content_type == “text/html” //过滤content_type是text/html的http响应、post包\rhttp.content_encoding == “gzip” //过滤content_encoding是gzip的http包\rhttp.transfer_encoding == “chunked” //根据transfer_encoding过滤\rhttp.content_length == 279\rhttp.content_length_header == “279” //根据content_length的数值过滤\rhttp.server //过滤所有含有http头中含有server字段的数据包 也可参考：知乎 - Wireshark教程\nMISC^2 ntfsstreamseditor NTFS数据流隐写\nveracrypt 磁盘加密软件，可建立虚拟磁盘并利用密码或者密钥文件进行加密，支持各种加密算法\nCheat Engine 功能如其名，做一些游戏题的时候可以用这个走走捷径。 不要和带反作弊的游戏一起开\nbruteHASH 穷举指定格式的数据的HASH值，格式可以为：\n指定明文格式 不限定明文格式随机字符穷举 自定义穷举字符集 CTF 常见 HASH(MD4/MD5/SHA1) 设置 HASH 开头、结尾或包含字符串 ","前言#前言":"","压缩包分析#压缩包分析":"","图片隐写#图片隐写":"","文件隐写#文件隐写":"","流量分析#流量分析":"","通用工具#通用工具":"","音频隐写#音频隐写":""},"title":"【CTF】MISC常用工具集锦/使用方法简介"},"/blogs/hextra-setup-tutorial/":{"data":{"":"","一些容易踩的坑#一些容易踩的坑":"","准备工作#准备工作":"","参考资料#参考资料":" 以Hextra主题为例的Hugo博客搭建指南\n准备工作 安装好Go和Hugo(extended version) 配置好Git 拥有一个域名(可选) 速通 ℹ️ 施工中 建立两个仓库，分别存放源代码和生成的静态文件 Hugo初始化博客，目标文件夹与源代码仓库同名 拉取Hextra主题到./themes/hextra，拉取静态文件仓库到./public（使用git submodule） 配置hugo.yaml，参考exampleSite 写一点东西 生成静态文件，检查，推送到远程仓库 配置Github Pages到静态文件仓库中 (可选) CLoudflare 绑定域名解析 一些容易踩的坑 文件完整性校验不通过导致博客功能失效1 如图 为确保脚本或者样式表不被恶意篡改，网页会使用integrity来校验文件完整性，如果计算的SHA-256值和指定的不匹配，则浏览器拒绝加载此资源。 而在hugo生成静态资源后，如果尝试将其上传到github，有可能文件中的换行符会被git自动转换，导致本地文件和云端文件校验值不同。 解决方法是关闭git自带的CRLF\u003c–\u003eLF转换：\ngit config --global core.autocrlf false 或者指定某个仓库不转换\nCloudflare Pages自动构建过程出错 暂时未找到解决方法，替代品是直接让它部署生成后的静态页面\n参考资料 Hextra Hugo 头部自定义参数 Issue ↩︎","速通#速通":""},"title":"博客搭建指南"},"/misc/":{"data":{"":"","#":"饿了 "},"title":"Misc"},"/thoughts/":{"data":{"":"","#":"俺寻思…… "},"title":"Thoughts"}}