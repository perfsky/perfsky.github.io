<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sakuya&#39;s Blog – Blog List</title>
    <link>https://perfsky.github.io/myblog/</link>
    <description>Recent content in Blog List on Sakuya&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 13 Apr 2025 23:11:58 +0800</lastBuildDate>
    
	  <atom:link href="https://perfsky.github.io/myblog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>从rAF()探究浏览器帧渲染流程</title>
      <link>https://perfsky.github.io/myblog/how-raf-and-frame-works/</link>
      <pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate>
      
      <guid>https://perfsky.github.io/myblog/how-raf-and-frame-works/</guid>
      <description>
        
        
        &lt;h2&gt;requestAnimationFrame()&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;requestanimationframe&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#requestanimationframe&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;MDN对&lt;code&gt;rAF()&lt;/code&gt;的解释：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; 方法会告诉浏览器你希望执行一个动画。它要求浏览器在下一次重绘之前，调用用户提供的回调函数。对回调函数的调用频率通常与显示器的刷新率相匹配。最常见的刷新率是 60hz。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;window.cancelAnimationFrame(rafId)&lt;/code&gt;作用于&lt;code&gt;rAF()&lt;/code&gt;的返回值，取消回调函数执行操作。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;若你想在浏览器下次重绘之前继续更新下一帧动画，那么回调函数自身必须再次调用 &lt;code&gt;requestAnimationFrame()&lt;/code&gt;。&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 是一次性的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 是一个宏任务。&lt;/p&gt;
&lt;p&gt;使用示例：&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;requestId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;回调发生在时间:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// rAF执行的回调函数只有一个参数val，是上一帧渲染的结束时间戳
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;requestId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;cancelAnimationFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;requestId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;特点以及机制&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;特点以及机制&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e7%89%b9%e7%82%b9%e4%bb%a5%e5%8f%8a%e6%9c%ba%e5%88%b6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;为什么使用&lt;code&gt;rAF()&lt;/code&gt;而不是&lt;code&gt;setTimeout()&lt;/code&gt;？&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;为什么使用raf而不是settimeout&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bd%bf%e7%94%a8raf%e8%80%8c%e4%b8%8d%e6%98%afsettimeout&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;计时精确，帧生成时间稳定&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;计时精确帧生成时间稳定&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e8%ae%a1%e6%97%b6%e7%b2%be%e7%a1%ae%e5%b8%a7%e7%94%9f%e6%88%90%e6%97%b6%e9%97%b4%e7%a8%b3%e5%ae%9a&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;帧生成时间指的是每个完整帧从开始到结束渲染的时间。一般情况下，帧生成时间要小于当前刷新率下每帧持续显示的时间，这样才能确保画面显示稳定。否则可能会导致画面操作卡顿不跟手等问题。&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;.././how-raf-and-frame-works/frame-time-unstable.png&#34; title=&#34;恼人的卡顿&#34; alt=&#34;unstable frame time&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;恼人的卡顿&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 的间隔时间由浏览器决定。浏览器内核监听显示器的VSync（垂直同步）信号，并自动同步频率，使&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 能够以精确的16.67ms触发回调（60帧的情况下）。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;setTimeout()&lt;/code&gt; 、&lt;code&gt;setInterval()&lt;/code&gt;等方法会受到JS事件队列执行的影响，每次触发回调的时长会发生抖动。&lt;/p&gt;
&lt;h4&gt;自带FPS Meter监控帧时长&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;自带fps-meter监控帧时长&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e8%87%aa%e5%b8%a6fps-meter%e7%9b%91%e6%8e%a7%e5%b8%a7%e6%97%b6%e9%95%bf&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;浏览器内部会使用&lt;code&gt;requestAnimationFrame()&lt;/code&gt; +高精度计时器记录帧生成时间、FPS、任务执行时间等数据，如果过长或者触发阈值，浏览器会延迟显示（导致FPS下降），或者主动跳过当前帧的渲染（更新状态但是不光栅化）。&lt;/p&gt;
&lt;h4&gt;页面处于后台或者元素不可见时暂停&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;页面处于后台或者元素不可见时暂停&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e9%a1%b5%e9%9d%a2%e5%a4%84%e4%ba%8e%e5%90%8e%e5%8f%b0%e6%88%96%e8%80%85%e5%85%83%e7%b4%a0%e4%b8%8d%e5%8f%af%e8%a7%81%e6%97%b6%e6%9a%82%e5%81%9c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;为了提高性能和电池寿命，大多数浏览器都会暂停在后台选项卡或者隐藏的 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 中运行的 &lt;code&gt;requestAnimationFrame()&lt;/code&gt; 。&lt;/p&gt;
&lt;h3&gt;浏览器一帧的生命周期&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;浏览器一帧的生命周期&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%b5%8f%e8%a7%88%e5%99%a8%e4%b8%80%e5%b8%a7%e7%9a%84%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;简单来说，一个帧的完整生命周期如下：&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;.././how-raf-and-frame-works/life-of-a-frame.png&#34; title=&#34;简要步骤&#34; alt=&#34;life of a frame&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;简要步骤&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在主线程中处理输入、JS事件（包括同步和异步任务）&lt;/li&gt;
&lt;li&gt;由VSync信号驱动，检测是否需要更新页面，并触发一些系统事件&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 执行回调，这是动画系统最后的同步操作DOM的时机&lt;/li&gt;
&lt;li&gt;计算样式，处理Layout（回流）等内容&lt;/li&gt;
&lt;li&gt;计算/标记重绘部分，交给GPU或者渲染线程进行光栅化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;rAF()&lt;/code&gt; 在这里负责接受VSync同步信号，执行动画回调。&lt;/p&gt;
&lt;p&gt;而在Chromium文档中，一帧从开始到展现是如下的步骤：&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;.././how-raf-and-frame-works/chromium-frame.png&#34; title=&#34;分进程时序图&#34; alt=&#34;chromium&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;分进程时序图&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;整个过程首先由四个进程组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Main Thread(blink): 主渲染进程，执行JS、布局和样式更新计算，把渲染树交给Layer Compositor&lt;/li&gt;
&lt;li&gt;Layer Compositor (cc): 渲染进程，负责合成层调度、调用光栅化线程、提交frame给Display Compositor&lt;/li&gt;
&lt;li&gt;Display Compositor: 副GPU进程，汇总Layer Compositor的frame，发起GPU绘制&lt;/li&gt;
&lt;li&gt;GPU Main: 真正执行GPU绘制、提出SwapBuffer请求，将buffer内容贴到屏幕&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按顺序，分别会进行如下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Display Compositor发起帧准备，让Layer Compositor做层更新工作。&lt;/li&gt;
&lt;li&gt;Layer Compositor告知Main Thread进行计算样式/布局/重绘渲染树。&lt;/li&gt;
&lt;li&gt;Main Thread返回Render Tree给Layer Compositor。&lt;/li&gt;
&lt;li&gt;Layer Compositor等待光栅化完成（这一步可能在其他的线程甚至进程中），然后激活形成新的Layer Tree，等待直到GPU规定的提交deadline，再提交给Display Compositor。（这里，如果之前的工作耗时过长，处理管线可能会丢弃这一更新，导致丢帧）&lt;/li&gt;
&lt;li&gt;Display Compositor收集所有的CompositorFrame（和DidNotProduceFrame，如果丢帧），整合成单一的CompositorFrame。&lt;/li&gt;
&lt;li&gt;Display Compositor进行绘制操作（生成绘制命令），提交给GPU Main，请求交换Buffer。&lt;/li&gt;
&lt;li&gt;GPU Main等到上一个frame处理完成后再进行（硬件级）GPU绘制，使用Display Compositor的绘制命令进行绘制，绘制使用的是Chromium的Skia图形库记录的Deferred Display List。&lt;/li&gt;
&lt;li&gt;如果上一个frame还没有显示完，或者队列太满则会被阻塞，否则进行SwapBuffer请求（把已经画好的back buffer和当前显示的front buffer进行交换，双缓冲）&lt;/li&gt;
&lt;li&gt;交换完buffer之后，等待对齐下一个VSync再显示到显示器中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用流程图简化表示如下：&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;VSync
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;↓
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GPU 进程（Display Compositor） → 渲染进程（Compositor Thread） → 渲染进程（Main Thread）做 JS/Layout
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;↓
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;渲染进程 LayerCompositor 栅格化 + 提交 frame
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;↓
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GPU 进程（汇总、绘制、Swap）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;↓
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;显示在屏幕上&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://chromium.googlesource.com/chromium/src/&amp;#43;/HEAD/docs/life_of_a_frame.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;参考资料&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;拓展&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;拓展&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%8b%93%e5%b1%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;requestIdleCallback()&lt;/code&gt; 是浏览器提供的一种低优先级任务调度API，允许开发者在浏览器空闲时期执行其他任务。这里的浏览器空闲时期指的是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前一帧渲染完成到后一帧开始渲染的间隔&lt;/li&gt;
&lt;li&gt;用户处于idle状态，并且没有任何动画执行的时期&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不能保证任务在何时执行。如果渲染事件紧密，可能腾不出执行&lt;code&gt;rIC()&lt;/code&gt; 的时间。&lt;/li&gt;
&lt;li&gt;空闲回调时，任务执行的上限时间是&lt;code&gt;50ms&lt;/code&gt; ，目的是*”ensure responsiveness to new user input within the threshold of human perception”&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;*，防止用户突然操作感受到页面阻塞。&lt;/li&gt;
&lt;li&gt;兼容性不理想（Safari全版本不支持）；触发频率较低；早期SWR使用&lt;code&gt;rIC()&lt;/code&gt; 会和浏览器插件冲突。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;佚事&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;佚事&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e4%bd%9a%e4%ba%8b&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;其一&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;其一&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%85%b6%e4%b8%80&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;查阅资料时，发现早期浏览器对&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 的执行顺序不同，Chrome v71、Firefox等符合标准的浏览器会在style/layout/paint之前、JS事件循环之后触发回调，而IE、Edge、Safari则是在style/layout/paint之后触发。&lt;/p&gt;
&lt;p&gt;而HTML标准里，&lt;code&gt;requestAnimationFrame()&lt;/code&gt; 被规定在更新渲染中（即render下一帧之前）&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;.././how-raf-and-frame-works/html-standard.png&#34; title=&#34;HTML 标准&#34; alt=&#34;html standard&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;HTML 标准&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此使用以下的代码，在标准下应该从左开始移动：&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;testButton&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;testButton&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;resetButton&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;resetButton&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;translate(0, 0)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;testButton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 重置状态
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 设置初始变换
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;translate(400px, 0)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;transform 3s linear&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;translate(200px, 0)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;resetButton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transition&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;translate(0, 0)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;但是，在笔者的浏览器（较新的Safari+Chrome）上，均会从右向左移动，似乎把回调推迟到了下一帧，这就很奇怪了，可能是浏览器的优化策略所致。&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;.././how-raf-and-frame-works/misfunction.gif&#34; title=&#34;标准下应该从左向右移动&#34; alt=&#34;msifunction&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;标准下应该从左向右移动&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/64917985&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;参考资料&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;其二&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;其二&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%85%b6%e4%ba%8c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;React 16.2.0弃用了&lt;code&gt;requestAnimationFrame()&lt;/code&gt; ，采用message event loop。不仅是因为上文中的回调时机问题，也是因为&lt;code&gt;MessageChannel&lt;/code&gt; 较为稳定，不会像&lt;code&gt;setTimeout()&lt;/code&gt; 一样有4ms的最小延迟，也不会像&lt;code&gt;requestAnimationFrame()&lt;/code&gt;一样触发事件受浏览器更新机制和VSync的影响。它既能及时让出主线程，又能够确保消息的稳定传递。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/react/pull/16214&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub PR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kanglover.github.io/2024/09/19/react-requestIdleCallback/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;参考资料&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://html.spec.whatwg.org/multipage/webappapis.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTML Standard 8.1.7.3 - 5.2.1 Note&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Hextra主题博客搭建指南</title>
      <link>https://perfsky.github.io/myblog/hextra-setup-tutorial/</link>
      <pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>https://perfsky.github.io/myblog/hextra-setup-tutorial/</guid>
      <description>
        
        
        &lt;blockquote&gt;
  &lt;p&gt;以Hextra主题为例的Hugo博客搭建指南&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;准备工作&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;准备工作&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装好Go和Hugo(extended version)&lt;/li&gt;
&lt;li&gt;配置好Git&lt;/li&gt;
&lt;li&gt;拥有一个域名(可选)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;速通&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;速通&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e9%80%9f%e9%80%9a&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200&#34;&gt;
  &lt;div class=&#34;ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2&#34;&gt;&lt;div class=&#34;hx-select-none hx-text-xl&#34; style=&#34;font-family: &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;;&#34;&gt;ℹ️&lt;/div&gt;&lt;/div&gt;

  &lt;div class=&#34;hx-w-full hx-min-w-0 hx-leading-7&#34;&gt;
    &lt;div class=&#34;hx-mt-6 hx-leading-7 first:hx-mt-0&#34;&gt;施工中&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;建立两个仓库，分别存放源代码和生成的静态文件&lt;/li&gt;
&lt;li&gt;Hugo初始化博客，目标文件夹与源代码仓库同名&lt;/li&gt;
&lt;li&gt;拉取Hextra主题到./themes/hextra，拉取静态文件仓库到./public（使用&lt;code&gt;git submodule&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;配置hugo.yaml，参考exampleSite&lt;/li&gt;
&lt;li&gt;写一点东西&lt;/li&gt;
&lt;li&gt;生成静态文件，检查，推送到远程仓库&lt;/li&gt;
&lt;li&gt;配置Github Pages到静态文件仓库中&lt;/li&gt;
&lt;li&gt;(可选) CLoudflare 绑定域名解析&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;一些容易踩的坑&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;一些容易踩的坑&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e4%b8%80%e4%ba%9b%e5%ae%b9%e6%98%93%e8%b8%a9%e7%9a%84%e5%9d%91&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;文件完整性校验不通过导致博客功能失效&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;文件完整性校验不通过导致博客功能失效&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%96%87%e4%bb%b6%e5%ae%8c%e6%95%b4%e6%80%a7%e6%a0%a1%e9%aa%8c%e4%b8%8d%e9%80%9a%e8%bf%87%e5%af%bc%e8%87%b4%e5%8d%9a%e5%ae%a2%e5%8a%9f%e8%83%bd%e5%a4%b1%e6%95%88&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;
    &lt;figure&gt;
    &lt;img src=&#34;.././hextra-setup-tutorial/hextra-setup-tutorial_blocked-js-css.png&#34; title=&#34;如图&#34; alt=&#34;landscape&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;如图&lt;/figcaption&gt;
  &lt;/figure&gt;
为确保脚本或者样式表不被恶意篡改，网页会使用&lt;code&gt;integrity&lt;/code&gt;来校验文件完整性，如果计算的SHA-256值和指定的不匹配，则浏览器拒绝加载此资源。
而在hugo生成静态资源后，如果尝试将其上传到github，有可能文件中的换行符会被git自动转换，导致本地文件和云端文件校验值不同。
解决方法是关闭git自带的CRLF&amp;lt;&amp;ndash;&amp;gt;LF转换：&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global core.autocrlf false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;或者&lt;a href=&#34;https://docs.github.com/zh/get-started/getting-started-with-git/configuring-git-to-handle-line-endings#per-repository-settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指定某个仓库不转换&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Cloudflare Pages自动构建过程出错&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloudflare-pages自动构建过程出错&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloudflare-pages%e8%87%aa%e5%8a%a8%e6%9e%84%e5%bb%ba%e8%bf%87%e7%a8%8b%e5%87%ba%e9%94%99&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;暂时未找到解决方法，替代品是直接让它部署生成后的静态页面&lt;/p&gt;
&lt;h2&gt;参考资料&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;参考资料&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imfing.github.io/hextra/zh-cn/docs/getting-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hextra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gohugo.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gohugo.org/doc/content/front-matter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;头部自定义参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/website/issues/25414&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Issue&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>看了也不会的GDB CheatSheet</title>
      <link>https://perfsky.github.io/myblog/useless-gdb-cheatsheet/</link>
      <pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://perfsky.github.io/myblog/useless-gdb-cheatsheet/</guid>
      <description>
        
        
        &lt;h2&gt;基本命令&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;基本命令&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;1. disassemble&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-disassemble&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-disassemble&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;输出当前函数的汇编代码&lt;/p&gt;
&lt;p&gt;默认为AT&amp;amp;T格式，用&lt;code&gt;set disassembly-flavor intel&lt;/code&gt;来改为Intel汇编格式&lt;/p&gt;
&lt;p&gt;可以用&lt;code&gt;layout asm&lt;/code&gt;，在上方代码区显示汇编码&lt;/p&gt;
&lt;h3&gt;2. run&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-run&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-run&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;用&lt;code&gt;run&lt;/code&gt;（简写r）开始执行程序，直到遇到断点停止。也可用Ctrl+C手动中断。执行过程再次使用run即可重启程序。&lt;/p&gt;
&lt;h3&gt;3. continue&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-continue&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-continue&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;触发断点或者用Ctrl+C中断后，用&lt;code&gt;continue&lt;/code&gt;（简写c）继续，程序会执行直到遇到另一个断点。&lt;/p&gt;
&lt;h3&gt;4. break&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-break&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-break&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;用&lt;code&gt;break&lt;/code&gt;（简写b）添加断点。&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 在函数名为functionname的入口处添加一个断点（比如main）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;break&lt;/span&gt; functionname
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 在当前文件行号为LineNo处添加一个断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;break&lt;/span&gt; LineNo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 在filename文件行号为LineNo处添加一个断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;break&lt;/span&gt; filename:LineNo&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;5. tbreak&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-tbreak&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-tbreak&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tbreak&lt;/code&gt;和&lt;code&gt;break&lt;/code&gt;用法相同，不过用此命令添加的断点触发一次之后即被删除。&lt;/p&gt;
&lt;h3&gt;6. info break/enable/disable/delete&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;6-info-breakenabledisabledelete&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#6-info-breakenabledisabledelete&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;info break&lt;/code&gt;查看添加的所有断点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;enable/disable + 断点编号&lt;/code&gt;可启用/禁用断点。若不加编号，默认对所有断点进行处理&lt;/p&gt;
&lt;p&gt;&lt;code&gt;delete + 断点编号&lt;/code&gt;永久删除断点。若不加编号，默认对所有断点进行处理&lt;/p&gt;
&lt;h3&gt;7. backtrace/frame&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;7-backtraceframe&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#7-backtraceframe&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;backtrace (bt)&lt;/code&gt;查看当前线程的调用堆栈&lt;/p&gt;
&lt;p&gt;&lt;code&gt;frame + 堆栈编号&lt;/code&gt;可切换到其他堆栈&lt;/p&gt;
&lt;h3&gt;8. list&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;8-list&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#8-list&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;list (l)&lt;/code&gt;查看当前断点附近的代码。一般显示断点前后10行代码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;list + [加号]&lt;/code&gt; 向下显示10行代码， list+[减号] 向上显示10行代码&lt;/p&gt;
&lt;h3&gt;9. print/ptype&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;9-printptype&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#9-printptype&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;print&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;print (p)&lt;/code&gt; 可方便输出/修改变量的值&lt;/p&gt;
&lt;p&gt;同时支持输出表达式（解引用*，算术+-*/，打印错误码对应文字信息&lt;code&gt;strerror(errno)&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;print variable = value&lt;/code&gt; 即可修改变量的值&lt;/p&gt;
&lt;p&gt;&lt;code&gt;print /format variable&lt;/code&gt; 指定输出格式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ptype&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ptype variable&lt;/code&gt; 输出变量类型（支持结构体）&lt;/p&gt;
&lt;h3&gt;10. info/thread&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;10-infothread&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#10-infothread&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;info&lt;/code&gt;用于查看各种信息，比如&lt;/p&gt;
&lt;p&gt;&lt;code&gt;info thread&lt;/code&gt; 查看所有线程&lt;/p&gt;
&lt;p&gt;&lt;code&gt;info args&lt;/code&gt; 查看当前函数的参数值&lt;/p&gt;
&lt;p&gt;&lt;code&gt;thread + 线程编号&lt;/code&gt; 切换到指定线程&lt;/p&gt;
&lt;h3&gt;11. next/step/until/finish/return/jump&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;11-nextstepuntilfinishreturnjump&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#11-nextstepuntilfinishreturnjump&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;next (n)&lt;/code&gt;跳到下一行（单步步过step over，遵循代码逻辑）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;step (s)&lt;/code&gt;会进入函数内部（单步步入step into）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;until (u) + &amp;lt;lineno&amp;gt;&lt;/code&gt; 直接执行到行数停止&lt;/p&gt;
&lt;p&gt;&lt;code&gt;return &amp;lt;value&amp;gt;&lt;/code&gt; 直接让函数用value返回值返回&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jump &amp;lt;lineno/location&amp;gt;&lt;/code&gt; 直接跳到行数或者函数地址（不停止，需要自行设置断点）&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;GDB空行直接回车默认为执行最近一次的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;12. set args/show args&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;12-set-argsshow-args&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#12-set-argsshow-args&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在使用run命令之前，使用&lt;code&gt;set args&lt;/code&gt;命令行参数来指定.&lt;/p&gt;
&lt;p&gt;可以使用文件，也可以直接輸入參數。有空格可以用雙引號包裹起來。&lt;/p&gt;
&lt;p&gt;清除参数，用&lt;code&gt;set args&lt;/code&gt;不加参数即可&lt;/p&gt;
&lt;h3&gt;13. watch/display&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;13-watchdisplay&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#13-watchdisplay&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;watch监视一个变量或者一段内存，如果发生变化就会中断。会产生一个watch point 观察点（数据断点）&lt;/p&gt;
&lt;p&gt;display监视变量或者内存值，每次 gdb 中断下来都会自动输出这些被监视变量或内存的值&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nfo display&lt;/code&gt;查看当前已经监视了哪些值，使用&lt;code&gt;delete display&lt;/code&gt;清除全部被监视的变量，使用&lt;code&gt;delete display + 编号&lt;/code&gt;移除对指定变量的监视&lt;/p&gt;
&lt;h3&gt;14. dir&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;14-dir&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#14-dir&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;gcc/g++编译出来的可执行程序并不包含完整源码，在不同环境里调试时可能不能匹配，dir可以让被调试的可执行程序匹配源代码&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 加一个源文件路径到当前路径的前面,指定多个路径为源码目录，可以使用引号”:”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dir SourcePath1:SourcePath2:SourcePath&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;show dir&lt;/code&gt;可以查看当前设置的源码路径&lt;/p&gt;
&lt;p&gt;dir不加参数则初始化搜索路径为空&lt;/p&gt;
&lt;h2&gt;参考&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;参考&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%8f%82%e8%80%83&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://cppguide.cn/pages/68d9ed/#_2-5-1-gdb%E5%B8%B8%E7%94%A8%E8%B0%83%E8%AF%95%E5%91%BD%E4%BB%A4%E6%A6%82%E8%A7%88%E5%92%8C%E8%AF%B4%E6%98%8E&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GDB常用命令详解——利用GDB调试Redis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://quickref.cn/docs/gdb.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GDB 备忘清单 &amp;amp; gdb cheatsheet &amp;amp; Quick Reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sourceware.org/gdb/download/onlinedocs/refcard.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CheatSheet PDF&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
